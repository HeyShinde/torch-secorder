name: Python Package CI

on:
  push:
    branches: [main]
    tags:
      - 'v*'  # Triggers workflow on version tag pushes like v1.0.0
  pull_request:
    branches: [main]

jobs:
  validate-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: '2.1.3'

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Run pre-commit hooks
        run: |
          poetry run pre-commit install
          poetry run pre-commit run --all-files

      - name: Lint with ruff
        run: poetry run ruff check .

      - name: Run tests
        run: poetry run pytest

      - name: Build package
        run: poetry build

      - name: Upload distribution files
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-to-pypi:
    name: publish-to-pypi
    needs: [validate-and-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/p/torch-secorder
    permissions:
      id-token: write

    steps:
      - name: Download distribution files
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  create-github-release:
    name: create-github-release
    needs: [validate-and-build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download distribution files
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.build_changelog.outputs.changelog }}
          files: dist/*
